import pandas as pd
import argparse
import time

if __name__ == "__main__":

	parser = argparse.ArgumentParser(description = "Nearest neighbor search technique on grid-indexed data")

	parser.add_argument('-x', type=float, help = "latitude of query location q", required=True)
	parser.add_argument('-y', type=float, help = "longitude of query location q", required=True)
	parser.add_argument('-k', type=int, help = "integer k", required=True)

	args = parser.parse_args()

	df = pd.read_csv('Gowalla_totalCheckins.txt', sep="\t", header=None)

	df.columns = ["user", "check-in time", "latitude", "longitude", "location id"]

	target = {}

	start = time.time()
	
	for index, row in df.iterrows():
		distance = ((row['latitude'] - args.x)**2 + (row['longitude'] - args.y)**2)**0.5
		if len(target) < args.k:
			target[index] = distance
			t = max(target.values())
		else:		
			if distance < t:
				del_key = target.keys()[target.values().index(t)] # only one
				target.pop(del_key, None)
				target[index] = distance
				t = max(target.values())

	end = time.time()
	elapsedTime = end - start
	print 'Elapsed time in seconds', elapsedTime

	for x in target:
		print 'Line %s, distance to query %f' % (x, target[x])
