import pandas as pd
import argparse
import time

if __name__ == "__main__":

	parser = argparse.ArgumentParser(description = "Nearest neighbor search technique on grid-indexed data")

	parser.add_argument('-x', type=float, help = "latitude of query location q", required=True)
	parser.add_argument('-y', type=float, help = "longitude of query location q", required=True)
	parser.add_argument('-k', type=int, help = "integer k", required=True)

	args = parser.parse_args()

	df = pd.read_csv('Gowalla_totalCheckins.txt', sep="\t", header=None)

	df.columns = ["user", "check-in time", "latitude", "longitude", "location id"]

	TargetSet = {}

	start = time.time()
	
	for index, row in df.iterrows():
		distance = ((row['latitude'] - args.x)**2 + (row['longitude'] - args.y)**2)**0.5
		if len(TargetSet) < args.k:
			TargetSet[index] = distance
			t = max(TargetSet, key=TargetSet.get)
		else:		
			if distance < t:
				del_key = TargetSet.keys()[TargetSet.values().index(t)] # only one
				TargetSet.pop(del_key, None)
				TargetSet[index] = distance
				t = max(TargetSet, key=TargetSet.get)

	end = time.time()
	elapsed = end - start
	print("Elapsed time = ", elapsed)
	print("TargetSet = ", TargetSet)
